#include <stdio.h>
#include <gtk/gtk.h>


/* *@Description:从一个图片文件获取信息得到pixbuf *@param: gchar filename */ 
GdkPixbuf *create_pixbuf(const gchar* filename) {
	GdkPixbuf *pixbuf;
	GError *error = NULL; 
	pixbuf = gdk_pixbuf_new_from_file(filename,&error); 
	if(!pixbuf){ 
		fprintf(stderr,"%s\n",error->message); 
		g_error_free(error); 
	} 
	return pixbuf; 
}

void menu_pressed(GtkWidget *widget,gpointer window) {
	gchar *str; str = g_strdup_printf("you clicked one menu item"); 
	gtk_statusbar_push(GTK_STATUSBAR(window),gtk_statusbar_get_context_id(GTK_STATUSBAR(window),str),str); 
	g_free(str); 
}

void toggle_display(GtkWidget *widget,gpointer oneofwidget) { 
	if(gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(oneofwidget))){ 
		gtk_widget_show(widget); 
	}else{
		gtk_widget_hide(widget); 
	}
}


int main(int argc,char *argv[]) {
	printf("=====\n");
	GtkWidget *window;

	GtkWidget *vbox; 
	GtkWidget *menubar;
	GtkWidget *menutoggle,*menu_tog_toggle,*menu_tog_toolbar,*menu_tog_statusbar; 
	GtkWidget *toolbar; 
	GtkToolItem *tool_exit,*tool_sep,*tool_about;
	GtkWidget *statusbar; 


	gtk_init(&argc,&argv);
	window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
	gtk_window_set_title(GTK_WINDOW(window),"DEMO"); 
	gtk_window_set_default_size(GTK_WINDOW(window),500,400); 
	gtk_window_set_position(GTK_WINDOW(window),GTK_WIN_POS_CENTER);
	gtk_window_set_icon(GTK_WINDOW(window),create_pixbuf("/home/ppa/work/ui/abc-0.1/icon.png"));


	vbox = gtk_vbox_new(FALSE,0); 
	gtk_container_add(GTK_CONTAINER(window),vbox); 
	menubar = gtk_menu_bar_new(); 
	menutoggle = gtk_menu_new(); 
	menu_tog_toggle = gtk_menu_item_new_with_label("View"); 
	menu_tog_toolbar = gtk_check_menu_item_new_with_label("show Toolbar"); 
	gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(menu_tog_toolbar),TRUE); 
	menu_tog_statusbar = gtk_check_menu_item_new_with_label("show Statusbar"); 
	gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(menu_tog_statusbar),TRUE); 
	gtk_menu_item_set_submenu(GTK_MENU_ITEM(menu_tog_toggle),menutoggle);  
	gtk_menu_shell_append(GTK_MENU_SHELL(menutoggle),menu_tog_toolbar); 
	gtk_menu_shell_append(GTK_MENU_SHELL(menutoggle),menu_tog_statusbar);
	gtk_menu_shell_append(GTK_MENU_SHELL(menubar),menu_tog_toggle); 

	toolbar = gtk_toolbar_new(); 
	gtk_toolbar_set_style(GTK_TOOLBAR(toolbar),GTK_TOOLBAR_ICONS);  
	gtk_container_set_border_width(GTK_CONTAINER(toolbar),0); 
	tool_exit = gtk_tool_button_new_from_stock(GTK_STOCK_QUIT); 
	gtk_toolbar_insert(GTK_TOOLBAR(toolbar),tool_exit,-1); 
	tool_sep = gtk_separator_tool_item_new(); 
	gtk_toolbar_insert(GTK_TOOLBAR(toolbar),tool_sep,-1); 
	tool_about = gtk_tool_button_new_from_stock(GTK_STOCK_HELP); 
	gtk_toolbar_insert(GTK_TOOLBAR(toolbar),tool_about,-1); 
	statusbar = gtk_statusbar_new(); gtk_box_pack_start(GTK_BOX(vbox),menubar,FALSE,FALSE,1);  
	gtk_box_pack_start(GTK_BOX(vbox),toolbar,FALSE,FALSE,0); 
	gtk_box_pack_end(GTK_BOX(vbox),statusbar,FALSE,TRUE,1); 

	g_signal_connect_swapped(G_OBJECT(window),"destroy",G_CALLBACK(gtk_main_quit),NULL); 
	g_signal_connect(G_OBJECT(menu_tog_toolbar),"activate",G_CALLBACK(menu_pressed),G_OBJECT(statusbar));
	g_signal_connect(G_OBJECT(menu_tog_statusbar),"activate",G_CALLBACK(menu_pressed),G_OBJECT(statusbar));
	g_signal_connect(G_OBJECT(tool_exit),"clicked",G_CALLBACK(gtk_main_quit),NULL);
	g_signal_connect(G_OBJECT(menu_tog_toolbar),"activate",G_CALLBACK(toggle_display),toolbar); 
	g_signal_connect(G_OBJECT(menu_tog_statusbar),"activate",G_CALLBACK(toggle_display),statusbar);


	gtk_widget_show_all(window);
	gtk_main();
	return 1;

}